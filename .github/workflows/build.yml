name: Build Container Image
on:
  schedule:
    - cron: '0 8 * * 1'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 5
    strategy:
      matrix:
        nginx_version:
          - "1"
          - "1.24"
          - "1.25"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ matrix.nginx_version }}

      - name: Select Dockerfile (allow custom file)
        id: dockerfile
        run: |
          if [ -f "./Dockerfile-${{ matrix.nginx_version }}" ]; then
            echp "Selected custom Dockerfile-${{ matrix.nginx_version }}" >> $GITHUB_STEP_SUMMARY
            echo "path=./Dockerfile-${{ matrix.nginx_version }}" >> $GITHUB_OUTPUT
          else
            echo "Selected default Dockerfile" >> $GITHUB_STEP_SUMMARY
            echo "path=./Dockerfile" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ steps.dockerfile.outputs.path }}
          build-args: |
            NGINX_VERSION=${{ matrix.nginx_version }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
